#!/usr/bin/env bash
#
# [Release]: Blackbuntu 20.04.3 LTS amd64
# [Website]: https://blackbuntu.org/p/releases/?ver=20.04.3
# [License]: http://www.gnu.org/licenses/gpl-3.0.html
#
# Ascii Art : https://www.askapache.com/online-tools/figlet-ascii/

## ---------------- ##
## Define Variables ##
## ---------------- ##

## Colour output
## -------------
t_error="\033[01;31m"	# Error
t_valid="\033[01;32m"	# Valid
t_alert="\033[01;33m"	# Alert
t_title="\033[01;34m"	# Title
t_reset="\033[00m"		# Reset

## Clear screen
## ------------
function clearscreen()
{
	clear
	sleep 2s
}

## Keep alive
## ----------
function keepalive()
{
	sudo -v
	while true;
	do
		sudo -n true;
		sleep 60s;
		kill -0 "$$" || exit;
	done 2>/dev/null &
}

## Load banner
## -----------
function showbanner()
{
	clear
	echo -e "${t_error}  _     _            _    _                 _          ${t_reset}"
	echo -e "${t_error} | |   | |          | |  | |               | |         ${t_reset}"
	echo -e "${t_error} | |__ | | __ _  ___| | _| |__  _   _ _ __ | |_ _   _  ${t_reset}"
	echo -e "${t_error} | '_ \| |/ _' |/ __| |/ / '_ \| | | | '_ \| __| | | | ${t_reset}"
	echo -e "${t_error} | |_) | | (_| | (__|   <| |_) | |_| | | | | |_| |_| | ${t_reset}"
	echo -e "${t_error} |_'__/|_|\__'_|\___|_|\_\_'__/ \__'_|_| |_|\__|\__'_| ${t_reset}"
	echo -e "${t_error}                                      v20.04 LTS amd64 ${t_reset}"
	echo
	echo -e "${t_valid}[i] [Package]: blackbuntu-kernel${t_reset}"
	echo -e "${t_valid}[i] [Website]: https://blackbuntu.org${t_reset}"
  	sleep 3s
}

## Check Internet status
## ---------------------
function checkinternet()
{
	for i in {1..10};
	do
		ping -c 1 -W ${i} www.google.com &>/dev/null && break;
	done

	if [[ "$?" -ne 0 ]];
	then
		echo
		echo -e "${t_error}Error ~ Possible DNS issues or no Internet connection${t_reset}"
		echo -e "${t_error}Quitting ...${t_reset}\n"
		exit 1
	fi
}

## Warning
## -------
function warning()
{
	echo
    echo -e "${t_error}*** Warning ***${t_reset}"
    echo -e "${t_error}You are about to remove all unused Kernel headers and images${t_reset}"
    echo -e "${t_error}We recommend to exit all other programs before to proceed${t_reset}"
    echo ""
    read -p "Do you want to continue? [y/N] " yn
    case $yn in
        [Yy]* )
            ;;
        [Nn]* )
            exit
            ;;
        * )
            exit
            ;;
    esac
}

## Load status
## -----------
function loadstatus()
{
	now="[$(date +'%Y-%m-%d %H:%I:%S')]"

	if [ "$2" == "error" ];
    then
        status="$t_error${now}$t_reset"
	fi

	if [ "$2" == "valid" ];
    then
        status="$t_valid${now}$t_reset"
	fi

	if [ "$2" == "alert" ];
    then
        status="$t_alert${now}$t_reset"
	fi

	if [ "$2" == "title" ];
    then
        status="$t_title${now}$t_reset"
	fi

	if [ "$2" == "reset" ];
    then
        status="$t_reset${now}$t_reset"
	fi

	txt="${status}-> $1"
	echo -e "$txt"
	sleep 1s
}

## Kernels Remove
## --------------
function kernelsremove()
{
	echo -e
	echo -e "${t_title}*** System Detection ***${t_reset}"
    uname -a
    kernelused=$(uname -a | awk '{ print $3 }')
    echo -e "Your in use kernel is $kernelused"

    oldkernels=$(
        dpkg --list |
            grep -v "$kernelused" |
            grep -Ei 'linux-image|linux-headers|linux-modules' |
            awk '{ print $2 }'
    )

    if [ -z "$oldkernels" ]
	then
		echo -e "${t_reset}Your system is clean${t_reset}"
	else
		echo -e "${t_reset}Old Kernels to be removed:${t_reset}"
		echo "$oldkernels"
	fi

    for packages in $oldkernels;
    do
        yes | apt purge "$packages"
        echo "$packages"
    done
	echo -e
}

## Load core system
## ----------------
function coresystem()
{
	## Start
	## -----
	loadstatus "Starting Kernels remove process ..." "alert"

	## Remove Kernels
	## --------------
	kernelsremove
	loadstatus "Removed Old Kernels" "title"

	## Terminate
	## ---------
	loadstatus "Process completed" "valid"
	sleep 2s
}

## Launch
## ------
function launch()
{
	clearscreen
	keepalive
	showbanner
	checkinternet
	warning
	clearscreen
	coresystem
}

## -------- ##
## Callback ##
## -------- ##

launch
